// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> _Result;
StructuredBuffer<float4> _Next; // Turns out the height table isn't actually useful
float _Size;

uint Index(uint x, uint y)
{
	return x * _Size + y;
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	uint index = Index(id.x, id.y);
	float _ShallowDepth = 5.0f; // constants don't work?


	float4 _GroundColor = lerp(float4(0, 0, 0, 1), float4(1, 1, 1, 1), _Next[index].x / 64.0f);

    // TODO: insert actual code here!
	if (_Next[index].y > _ShallowDepth) // Deep = full water
		_Result[id.xy] = float4(0.f, 0.f, max(0.f, 1.f - (_Next[index].y - _ShallowDepth) / 100.0f), 1.0f);
	else
		_Result[id.xy] = lerp(_GroundColor, float4(0.f, 0.f, 1.f, 1.0f), _Next[index].y / _ShallowDepth);
}
